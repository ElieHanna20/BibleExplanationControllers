// <auto-generated />
using System;
using BibleExplanationControllers.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibleExplanationControllers.Migrations.Auth
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20250215010323_InitialAuthMigration")]
    partial class InitialAuthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<byte>("ChapterNumber")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Explanation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SubAdminId")
                        .HasColumnType("uuid");

                    b.Property<int?>("SubtitleId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("WorkerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SubAdminId");

                    b.HasIndex("SubtitleId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Explanations");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Subtitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<string>("SubtitleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("Subtitle");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Verse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<int>("SubtitleId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("VerseNumber")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.HasIndex("SubtitleId");

                    b.ToTable("Verse");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("UserType").HasValue("AppUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.Admin", b =>
                {
                    b.HasBaseType("BibleExplanationControllers.Models.User.AppUser");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.SubAdmin", b =>
                {
                    b.HasBaseType("BibleExplanationControllers.Models.User.AppUser");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uuid");

                    b.Property<bool>("CanChangeBooksData")
                        .HasColumnType("boolean");

                    b.HasIndex("AdminId");

                    b.HasDiscriminator().HasValue("SubAdmin");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.Worker", b =>
                {
                    b.HasBaseType("BibleExplanationControllers.Models.User.AppUser");

                    b.Property<bool>("CanChangeBooksData")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SubAdminId")
                        .HasColumnType("uuid");

                    b.HasIndex("SubAdminId");

                    b.ToTable("Users", t =>
                        {
                            t.Property("CanChangeBooksData")
                                .HasColumnName("Worker_CanChangeBooksData");
                        });

                    b.HasDiscriminator().HasValue("Worker");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Chapter", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.Bible.Book", "Book")
                        .WithMany("Chapters")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Explanation", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.User.SubAdmin", "SubAdmin")
                        .WithMany("Explanations")
                        .HasForeignKey("SubAdminId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BibleExplanationControllers.Models.Bible.Subtitle", "Subtitle")
                        .WithMany("Explanations")
                        .HasForeignKey("SubtitleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BibleExplanationControllers.Models.User.Worker", "Worker")
                        .WithMany("Explanations")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SubAdmin");

                    b.Navigation("Subtitle");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Subtitle", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.Bible.Chapter", "Chapter")
                        .WithMany("Subtitles")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Verse", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.Bible.Chapter", null)
                        .WithMany("Verses")
                        .HasForeignKey("ChapterId");

                    b.HasOne("BibleExplanationControllers.Models.Bible.Subtitle", "Subtitle")
                        .WithMany("Verses")
                        .HasForeignKey("SubtitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subtitle");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.SubAdmin", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.User.Admin", "Admin")
                        .WithMany("SubAdmins")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.Worker", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.User.SubAdmin", "SubAdmin")
                        .WithMany("Workers")
                        .HasForeignKey("SubAdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubAdmin");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Book", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Chapter", b =>
                {
                    b.Navigation("Subtitles");

                    b.Navigation("Verses");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Subtitle", b =>
                {
                    b.Navigation("Explanations");

                    b.Navigation("Verses");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.Admin", b =>
                {
                    b.Navigation("SubAdmins");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.SubAdmin", b =>
                {
                    b.Navigation("Explanations");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.User.Worker", b =>
                {
                    b.Navigation("Explanations");
                });
#pragma warning restore 612, 618
        }
    }
}
