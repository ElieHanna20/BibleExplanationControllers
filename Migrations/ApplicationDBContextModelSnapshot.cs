// <auto-generated />
using BibleExplanationControllers.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibleExplanationControllers.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Books", "bible");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<byte>("ChapterNumber")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BookId", "ChapterNumber")
                        .IsUnique();

                    b.ToTable("Chapters", "bible");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Explanation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SubtitleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubtitleId");

                    b.ToTable("Explanations", "bible");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Subtitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<string>("SubtitleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId", "SubtitleName")
                        .IsUnique();

                    b.ToTable("Subtitles", "bible");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Verse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<int>("SubtitleId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("VerseNumber")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.HasIndex("SubtitleId");

                    b.ToTable("Verses", "bible");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Chapter", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.Bible.Book", "Book")
                        .WithMany("Chapters")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Explanation", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.Bible.Subtitle", "Subtitle")
                        .WithMany("Explanations")
                        .HasForeignKey("SubtitleId");

                    b.Navigation("Subtitle");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Subtitle", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.Bible.Chapter", "Chapter")
                        .WithMany("Subtitles")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Verse", b =>
                {
                    b.HasOne("BibleExplanationControllers.Models.Bible.Chapter", null)
                        .WithMany("Verses")
                        .HasForeignKey("ChapterId");

                    b.HasOne("BibleExplanationControllers.Models.Bible.Subtitle", "Subtitle")
                        .WithMany("Verses")
                        .HasForeignKey("SubtitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subtitle");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Book", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Chapter", b =>
                {
                    b.Navigation("Subtitles");

                    b.Navigation("Verses");
                });

            modelBuilder.Entity("BibleExplanationControllers.Models.Bible.Subtitle", b =>
                {
                    b.Navigation("Explanations");

                    b.Navigation("Verses");
                });
#pragma warning restore 612, 618
        }
    }
}
